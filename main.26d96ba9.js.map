{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","request","url","fetch","then","response","ok","json","Error","getPhones","getFirstReceivedDetails","arr","Promise","race","map","phone","id","result","firstReceivedShow","getAllSuccessfulDetails","allSettled","item","value","data","allReceivedShow","getThreeFastestDetails","all","nameClass","title","document","body","insertAdjacentHTML","name","join"],"mappings":";AAAA,aAEA,IAAMA,EAAW,mEAGXC,EAAU,WAACC,IAAAA,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACdC,OAAAA,MAASH,GAAAA,OAAAA,GAAWE,OAAAA,EAApB,UACJE,KAAK,SAAAC,GACA,OAACA,EAASC,GAIPD,EAASE,OAHP,IAAIC,MAAM,YAOnBC,EAAY,WAAMR,OAAAA,KAExB,SAASS,EAAwBC,GACxBC,OAAAA,QAAQC,KAAKF,EAAIG,IAAI,SAAAC,GAASd,OAAAA,EAAYc,IAAAA,OAAAA,EAAMC,QACpDZ,KAAK,SAAAa,GACJC,EAAkB,iBAAkB,iBAAkBD,KAI5D,SAASE,EAAwBR,GACxBC,OAAAA,QAAQQ,WAAWT,EAAIG,IAAI,SAAAC,GAASd,OAAAA,EAAYc,IAAAA,OAAAA,EAAMC,QAC1DZ,KAAK,SAAAa,GAAUA,OAAAA,EAAOH,IAAI,SAAAO,GAAQA,OAAAA,EAAKC,UACvClB,KAAK,SAAAmB,GAAQC,OAAAA,EAAgB,iBAAkB,iBAAkBD,KAGtE,SAASE,EAAuBd,GACvBC,OAAAA,QAAQc,IAAI,CACjBd,QAAQC,KAAKF,EAAIG,IAAI,SAAAC,GAASd,OAAAA,EAAYc,IAAAA,OAAAA,EAAMC,QAChDJ,QAAQC,KAAKF,EAAIG,IAAI,SAAAC,GAASd,OAAAA,EAAYc,IAAAA,OAAAA,EAAMC,QAChDJ,QAAQC,KAAKF,EAAIG,IAAI,SAAAC,GAASd,OAAAA,EAAYc,IAAAA,OAAAA,EAAMC,UAE/CZ,KAAK,SAAAa,GACJO,EAAgB,iBAAkB,gBAAiBP,KAmBzD,SAASC,EAAkBS,EAAWC,EAAOX,GAC3CY,SAASC,KAAKC,mBAAmB,aACnBJ,mBAAAA,OAAAA,EACNC,gBAAAA,OAAAA,EAEAX,6BAAAA,OAAAA,EAAOe,KAJf,mCAWF,SAASR,EAAgBG,EAAWC,EAAOX,GACzCY,SAASC,KAAKC,mBAAmB,aACnBJ,mBAAAA,OAAAA,EACNC,gBAAAA,OAAAA,EAEJX,yBAAAA,OAAAA,EAAOH,IAAI,SAAAC,GAAgBA,MAAAA,OAAAA,OAAAA,EAAMiB,KAAjB,WAA8BC,KAAK,IAJvD,8BA5BFxB,IACGL,KAAK,SAAAa,GACJP,EAAwBO,KAG5BR,IACGL,KAAK,SAAAa,GACJQ,EAAuBR,KAG3BR,IACGL,KAAK,SAAAa,GACJE,EAAwBF","file":"main.26d96ba9.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst BASE_URL = 'https://mate-academy.github.io/'\r\n+ 'phone-catalogue-static/api/phones';\r\n\r\nconst request = (url = '') => {\r\n  return fetch(`${BASE_URL}${url}.json`)\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        return new Error('Error');\r\n      }\r\n\r\n      return response.json();\r\n    });\r\n};\r\n\r\nconst getPhones = () => request();\r\n\r\nfunction getFirstReceivedDetails(arr) {\r\n  return Promise.race(arr.map(phone => request(`/${phone.id}`)))\r\n    .then(result => {\r\n      firstReceivedShow('first-received', 'First Received', result);\r\n    });\r\n}\r\n\r\nfunction getAllSuccessfulDetails(arr) {\r\n  return Promise.allSettled(arr.map(phone => request(`/${phone.id}`)))\r\n    .then(result => result.map(item => item.value))\r\n    .then(data => allReceivedShow('all-successful', 'All Successful', data));\r\n}\r\n\r\nfunction getThreeFastestDetails(arr) {\r\n  return Promise.all([\r\n    Promise.race(arr.map(phone => request(`/${phone.id}`))),\r\n    Promise.race(arr.map(phone => request(`/${phone.id}`))),\r\n    Promise.race(arr.map(phone => request(`/${phone.id}`))),\r\n  ])\r\n    .then(result => {\r\n      allReceivedShow('three-received', 'Three Fastest', result);\r\n    });\r\n}\r\n\r\ngetPhones()\r\n  .then(result => {\r\n    getFirstReceivedDetails(result);\r\n  });\r\n\r\ngetPhones()\r\n  .then(result => {\r\n    getThreeFastestDetails(result);\r\n  });\r\n\r\ngetPhones()\r\n  .then(result => {\r\n    getAllSuccessfulDetails(result);\r\n  });\r\n\r\nfunction firstReceivedShow(nameClass, title, result) {\r\n  document.body.insertAdjacentHTML('afterbegin', `\r\n  <div class=\"${nameClass}\">\r\n    <h3>${title}</h3>\r\n    <ul>\r\n    <li>${result.name}</li>\r\n    </ul>\r\n  </div>\r\n  `\r\n  );\r\n}\r\n\r\nfunction allReceivedShow(nameClass, title, result) {\r\n  document.body.insertAdjacentHTML('afterbegin', `\r\n  <div class=\"${nameClass}\">\r\n    <h3>${title}</h3>\r\n    <ul>\r\n    ${result.map(phone => `<li>${phone.name}</li>`).join('')}\r\n    </ul>\r\n  </div>\r\n  `\r\n  );\r\n}\r\n"]}